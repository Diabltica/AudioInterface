name: Schematic

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  Preflight:
    runs-on: ubuntu-latest
    container: ghcr.io/inti-cmnb/kicad8_auto_full:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: "1"
          submodules: "true"
      - name: Run Kibot
        uses: INTI-CMNB/KiBot@v2_dk8
        with:
          config: kibot_config/preflight.kibot.yaml
          dir: output
          schema: "AudioInterface.kicad_sch"
          board: "AudioInterface.kicad_pcb"
          verbose: 3
      - name: "Setup jq"
        uses: dcarbone/install-jq-action@v2
      - name: Parse ERC
        run: |
          erc_warnings=$(cat output/AudioInterface-erc.json | jq '[try .violations[] | select(.severity == "warning")] | length')
          erc_errors=$(cat output/AudioInterface-erc.json | jq '[try .violations[] | select(.severity == "error")] | length')
          cat <<EOF > output/erc_validation.md
          ### ERC Report
          - **Errors**: $erc_errors
          - **Warnings**: $erc_warnings
          - **Link**: [HTML Report](AudioInterface-erc.html)
          EOF
          cat output/erc_validation.md

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Preflight
          path: output
  
  Documentation:
    runs-on: ubuntu-latest
    container: ghcr.io/inti-cmnb/kicad8_auto_full:latest
    needs: Preflight

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get preflight artifact
        uses: actions/download-artifact@v4
        with:
          path: output
      - name: Run Kibot
        uses: INTI-CMNB/Kibot@v2_dk8
        with: 
          config: kibot_config/schematic_documentation.kibot.yaml
          dir: output/Report
          schema: "AudioInterface.kicad_sch"
          verbose: 3
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Documentation
          path: output
      - name: Move artifact files
        run: |
          ls -l
          ls -l output
          ls -l output/Report
          mkdir Documents
          mkdir KiRiLight
          mv output/Preflight/erc_validation.md ./
          mv output/Preflight/AudioInterface-drc.html ./
          mv output/Preflight/AudioInterface-erc.html ./
          mv output/Report/IBOM/AudioInterface-ibom.html ./AudioInterface-ibom.html
          mv output/Report/Schematic/AudioInterface-schematic.pdf Documents/AudioInterface-schematic.pdf
          mv output/Report/KiRiLight ./ || true
          rm -rf output
          ls -l
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Move KiRi files directly to site
        run: |
          ls -l
          sudo chown -R $USER:$USER ./_site/
          cp -r ./KiRiLight ./_site/ || true 
          ls -l ./_site/
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  Deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4